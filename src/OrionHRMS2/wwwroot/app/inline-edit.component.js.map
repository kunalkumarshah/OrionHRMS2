{"version":3,"sources":["inline-edit.component.ts"],"names":["InlineEditComponent","element","_renderer","this","onSave","core_1","EventEmitter","_value","preValue","editing","onChange","Function","prototype","onTouched","Object","defineProperty","v","writeValue","value","registerOnChange","fn","registerOnTouched","edit","_this","setTimeout","_","invokeElementMethod","inlineEditControl","nativeElement","onSubmit","emit","cancel","__decorate","ViewChild","Output","Component","selector","templateUrl","styleUrls","providers","provide","forms_1","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","exports_1"],"mappings":"q2BAeAA,oBAAA,WA0BI,QAAAA,qBAAYC,QAA6BC,WAAAC,KAAAD,UAAAA,UAtBxBC,KAAAC,OAA4B,GAAIC,QAAAC,aAGzCH,KAAAI,OAAiB,GACjBJ,KAAAK,SAAmB,GACnBL,KAAAM,SAAmB,EAGpBN,KAAAO,SAAgBC,SAASC,UACzBT,KAAAU,UAAiBF,SAASC,UA6CrC,MA1CIE,QAAAC,eAAIf,oBAAAY,UAAA,aAAJ,WAAmB,MAAOT,MAAKI,YAG/B,SAAUS,GACFA,IAAMb,KAAKI,SACXJ,KAAKI,OAASS,EACdb,KAAKO,SAASM,qCAOtBhB,oBAAAY,UAAAK,WAAA,SAAWC,OACPf,KAAKI,OAASW,OAGXlB,oBAAAY,UAAAO,iBAAP,SAAwBC,IAA4BjB,KAAKO,SAAWU,IAE7DpB,oBAAAY,UAAAS,kBAAP,SAAyBD,IAAsBjB,KAAKU,UAAYO,IAGhEpB,oBAAAY,UAAAU,KAAA,SAAKJ,OAAL,GAAAK,OAAApB,IACIA,MAAKK,SAAWU,MAChBf,KAAKM,SAAU,EAGfe,WAAW,SAAAC,GAAK,MAAAF,OAAKrB,UAAUwB,oBAAoBH,MAAKI,kBAAkBC,cAAe,eAI7F5B,oBAAAY,UAAAiB,SAAA,SAASX,OACLf,KAAKC,OAAO0B,KAAKZ,OACjBf,KAAKM,SAAU,GAInBT,oBAAAY,UAAAmB,OAAA,SAAOb,OACHf,KAAKI,OAASJ,KAAKK,SACnBL,KAAKM,SAAU,GApDnBuB,YAAC3B,OAAA4B,UAAU,iHACXD,YAAC3B,OAAA6B,uGAfLlC,oBAAAgC,YAAC3B,OAAA8B,WACGC,SAAU,cACVC,YAAa,+BACbC,WAAY,sCACZC,YAEQC,QAASC,QAAAC,kBACTC,YAAatC,OAAAuC,WAAW,WAAM,MAAA5C,uBAC9B6C,OAAO,mGAGnBC,UAAA,sBAAA9C","file":"inline-edit.component.js","sourcesContent":["import { Component, Output, Provider, forwardRef, EventEmitter, ElementRef, ViewChild, Renderer } from '@angular/core';\r\n\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\r\n\r\n@Component({\r\n    selector: 'inline-edit',\r\n    templateUrl: './inline-edit.component.html',\r\n    styleUrls: ['./styles/inline-edit.component.css'],\r\n    providers: [\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: forwardRef(() => InlineEditComponent),\r\n            multi: true\r\n        }]\r\n})\r\nexport class InlineEditComponent implements ControlValueAccessor{\r\n\r\n    // inline edit form control\r\n    @ViewChild('inlineEditControl') inlineEditControl;\r\n    @Output() public onSave: EventEmitter<any> = new EventEmitter();\r\n\r\n    // The internal data model\r\n    private _value: string = '';\r\n    private preValue: string = '';\r\n    private editing: boolean = false;\r\n\r\n    // Placeholders for the onChange and onTouch callbacks\r\n    public onChange: any = Function.prototype;\r\n    public onTouched: any = Function.prototype;\r\n\r\n    // get accessor\r\n    get value(): any { return this._value; };\r\n\r\n    // set accessor including the onChange callback\r\n    set value(v: any) {\r\n        if (v !== this._value) {\r\n            this._value = v;\r\n            this.onChange(v);\r\n        }\r\n    }\r\n\r\n    constructor(element: ElementRef, private _renderer: Renderer) { }\r\n\r\n    // Will update the internal data model with incoming values\r\n    writeValue(value: any) {\r\n        this._value = value;\r\n    }\r\n\r\n    public registerOnChange(fn: (_: any) => {}): void { this.onChange = fn; }\r\n\r\n    public registerOnTouched(fn: () => {}): void { this.onTouched = fn; };\r\n\r\n    // Method to display the inline edit form and hide the <a> element\r\n    edit(value) {\r\n        this.preValue = value;  // Store original value in case the form is cancelled\r\n        this.editing = true;\r\n\r\n        // Automatically focus input\r\n        setTimeout(_ => this._renderer.invokeElementMethod(this.inlineEditControl.nativeElement, 'focus', []));\r\n    }\r\n\r\n    // Method to display the editable value as text and emit save event to host\r\n    onSubmit(value) {\r\n        this.onSave.emit(value);\r\n        this.editing = false;\r\n    }\r\n\r\n    // Method to reset the editable value\r\n    cancel(value: any) {\r\n        this._value = this.preValue;\r\n        this.editing = false;\r\n    }\r\n\r\n}"]}